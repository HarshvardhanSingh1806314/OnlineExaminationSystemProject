@model FrontEnd.Models.CreateQuestion
@{
    ViewBag.Title = "AddQuestion";
    var testDropDown = (FrontEnd.Models.TestDropDown)ViewBag.TestDropDown;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Question</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            background: radial-gradient(circle, #1e1e1e, #000000);
            color: white;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 150vh;
            overflow:scroll;
        }

        .container {
            text-align: left;
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px 2px rgba(255, 0, 0, 0.7);
            width: 100%;
            max-width: 450px;
            min-height: 500px;
            display: flex;
            flex-direction: column;
            gap: 15px;
            position: relative;
        }

        h1 {
            margin-bottom: 20px;
            text-align: center;
            font-size: 24px;
            color: white;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-size: 14px;
            color: white;
        }

        input, textarea, select {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            outline: none;
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

            input[type="submit"] {
                margin-top: 15px;
                background: linear-gradient(90deg, #ff1a1a, #b30000);
                border: none;
                cursor: pointer;
                font-weight: bold;
                color: white;
                text-transform: uppercase;
            }

                input[type="submit"]:hover {
                    background: linear-gradient(90deg, #b30000, #ff1a1a);
                }

        textarea {
            resize: vertical;
            min-height: 60px;
        }
        /*img {
            height: 50px;
            width: 50px;
            margin:0 auto;
            display:block;
            background-color:gray;
            border-radius:5px;
        }*/
    </style>
</head>
<body>

    <div class="container">
        @*<img src="~/Images/logo.jpg" alt="Logo" />*@
        <h1>Add Question</h1>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <!-- Subject Selection -->
                <div class="form-group">
                    @Html.DropDownList("testId", new SelectList(testDropDown.Items, "Value", "Text"), new { @class = "custom-select" })
                </div>

                <!-- Question Input -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, "Description")
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <!-- Option A -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Option1, "Option 1")
                    @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
                </div>

                <!-- Option B -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Option2, "Option 2")
                    @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
                </div>

                <!-- Option C -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Option3, "Option 3")
                    @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
                </div>

                <!-- Option D -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Option4, "Option 4")
                    @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
                </div>

                <!-- Correct Answer -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Answer, "Correct Answer")
                    @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                </div>

                <!-- Difficulty Level -->
                <div class="form-group">
                    @Html.DropDownList("difficultyLevel", new List<SelectListItem>
             {
                new SelectListItem{Text="EASY", Value="easy"},
                new SelectListItem{Text="MEDIUM", Value="medium"},
                new SelectListItem{Text="HARD", Value="hard"},
            }, new { @class = "custom-select" })
                </div>

                <!-- Submit Button -->
                <div>
                    @*<input  onclick="location.href='@Url.Action("GetAllQuestions", "Admin")'" type="submit" value="Add Question">*@
                    @*<a href="@Url.Action("GetAllQuestions", "Admin")" class="btn btn-secondary btn-lg action-button" style="align-items:center;color:red;">
            Add Question
        </a>*@
                    <button type="submit" class="btn btn-primary">Add Question</button>
                </div>
                </div>}
            </div>

</body>
</html>
